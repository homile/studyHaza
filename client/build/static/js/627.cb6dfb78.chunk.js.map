{"version":3,"file":"static/js/627.cb6dfb78.chunk.js","mappings":"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","sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","components/Post/PostCommunity.tsx","components/Post/PostStudy.tsx","components/Post/PostBox.tsx","components/UI/Filter/SearchInputBar.tsx","components/UI/BoardHeader.tsx","components/UI/CommunityCard.tsx","components/UI/BoardListContents.tsx","components/UI/Filter/Pagination.tsx","pages/Community.tsx"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { useState, useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { db } from '../../firebase-config';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { WriteInputContainer } from './UI/PostInput';\nimport { ButtonPrimary } from '../UI/Button/Button';\nimport Modal from '../UI/Modal/Modal';\nimport { v4 as uuidv4 } from 'uuid';\nimport { RootState } from '../../redux/store';\n\ninterface Props {\n  setIsWrite: (isWrite: boolean) => void;\n}\n\nfunction PostCommunity({ setIsWrite }: Props) {\n  const navigate = useNavigate();\n\n  const titleInput = useRef<HTMLInputElement>(null);\n\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const dateCreated = new Date();\n  const nickName = useSelector(\n    (state: RootState) => state.loginReducer.nickName,\n  );\n\n  const [isOpenOk, setIsOpenOk] = useState(false);\n  const [isOpenCancel, setIsOpenCancel] = useState(false);\n\n  useEffect(() => {\n    const { current } = titleInput;\n    current?.focus();\n  }, []);\n\n  // 완료 버튼 클릭시\n  const openModalHandler1 = () => {\n    setIsOpenOk(!isOpenOk);\n  };\n\n  // 취소 버튼 클릭시\n  const openModalHandler2 = () => {\n    setIsOpenCancel(!isOpenCancel);\n  };\n\n  // 글 내용 초기화\n  const handleInit = () => {\n    setTitle('');\n    setContent('');\n    setIsWrite(false);\n  };\n\n  const postsCollectionRef = collection(db, 'posts');\n\n  // firestore에 데이터 올리기\n  const createPosts = async () => {\n    const id = uuidv4();\n    await addDoc(postsCollectionRef, {\n      board: 'community',\n      content,\n      dateCreated: dateCreated.toLocaleDateString(),\n      id,\n      nickName,\n      title,\n    });\n    navigate(`/community/detail/${id}`);\n  };\n\n  return (\n    <>\n      <WriteInputContainer>\n        <label htmlFor=\"title\">제목</label>\n        <div>\n          <input\n            defaultValue={title}\n            onChange={(e) => setTitle(e.target.value)}\n            id=\"community_title\"\n            placeholder=\"제목을 입력해주세요.\"\n            ref={titleInput}\n          />\n        </div>\n        <hr />\n      </WriteInputContainer>\n\n      <WriteInputContainer height=\"350px\">\n        <label htmlFor=\"content\">내용</label>\n        <div>\n          <textarea\n            defaultValue={content}\n            onChange={(e) => {\n              setContent(e.target.value);\n            }}\n            id=\"community_content\"\n            placeholder=\"내용을 입력해주세요.\"\n          />\n        </div>\n      </WriteInputContainer>\n      <ButtonContainer>\n        <ButtonPrimary onClick={openModalHandler2} background=\"#B6B6B6\">\n          취소\n        </ButtonPrimary>\n        {isOpenCancel && (\n          <Modal\n            isOpen={isOpenCancel}\n            handleModal={handleInit}\n            setIsOpen={setIsOpenCancel}\n          >\n            등록을 취소하시겠습니까?\n          </Modal>\n        )}\n        <ButtonPrimary onClick={openModalHandler1}>작성완료</ButtonPrimary>\n        {isOpenOk && (\n          <Modal\n            isOpen={isOpenOk}\n            handleModal={createPosts}\n            setIsOpen={setIsOpenOk}\n          >\n            커뮤니티 글을 등록하시겠습니까?\n          </Modal>\n        )}\n      </ButtonContainer>\n    </>\n  );\n}\n\nexport default PostCommunity;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n","import { useState, useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { WriteInputContainer } from './UI/PostInput';\nimport { SelectBox } from './UI/SelectBox';\nimport { DatePick } from './UI/DatePick';\nimport CheckBox from './UI/CheckBox';\nimport { ButtonPrimary } from '../UI/Button/Button';\nimport Modal from '../UI/Modal/Modal';\nimport { db } from '../../firebase-config';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { v4 as uuidv4 } from 'uuid';\nimport { RootState } from '../../redux/store';\nimport { devTypeOptions, onOffOptions } from '../../StackData';\n\ninterface Props {\n  setIsWrite: (isWrite: boolean) => void;\n  isEdit?: boolean;\n}\n\nconst PostStudy = ({ setIsWrite, isEdit }: Props) => {\n  const navigate = useNavigate();\n\n  const titleInput = useRef<HTMLInputElement>(null);\n\n  const [title, setTitle] = useState('');\n  const [startDate, setStartDate] = useState<Date>(new Date());\n  const [devType, setDevType] = useState('frontend');\n  const [devStack, setDevStack] = useState<string[]>([]);\n  const [totalHeadCount, setTotalHeadCount] = useState<number>(0);\n  const [onOff, setOnOff] = useState('on');\n  const [content, setContent] = useState('');\n  const dateCreated = new Date();\n  const nickName = useSelector(\n    (state: RootState) => state.loginReducer.nickName,\n  );\n\n  const [isOpenOk, setIsOpenOk] = useState(false);\n  const [isOpenCancel, setIsOpenCancel] = useState(false);\n\n  useEffect(() => {\n    const { current } = titleInput;\n    current?.focus();\n  }, []);\n\n  const openModalHandler1 = () => {\n    setIsOpenOk(!isOpenOk);\n  };\n\n  const openModalHandler2 = () => {\n    setIsOpenCancel(!isOpenCancel);\n  };\n\n  const handleInit = () => {\n    setTitle('');\n    setStartDate(new Date());\n    setDevType('frontend');\n    setDevStack([]);\n    setTotalHeadCount(0);\n    setOnOff('on');\n    setContent('');\n    setIsWrite(false);\n  };\n\n  const postsCollectionRef = collection(db, 'posts');\n\n  // firestore에 데이터 업로드\n  const createPosts = async () => {\n    const id = uuidv4();\n    await addDoc(postsCollectionRef, {\n      board: 'study',\n      content,\n      dateCreated: dateCreated.toLocaleDateString(),\n      devStack,\n      devType,\n      haveHeadCount: 0,\n      id,\n      nickName,\n      onOff,\n      startDate: startDate.toLocaleDateString(),\n      title,\n      totalHeadCount,\n    });\n    navigate(`/studyjoin/detail/${id}`);\n  };\n\n  return (\n    <>\n      <WriteInputContainer>\n        <label htmlFor=\"title\">제목</label>\n        <div>\n          <input\n            defaultValue={title}\n            onChange={(e) => {\n              setTitle(e.target.value);\n            }}\n            id=\"title\"\n            placeholder=\"제목을 입력해주세요.\"\n            ref={titleInput}\n          />\n        </div>\n      </WriteInputContainer>\n      <DivContainer>\n        <WriteInputContainer width=\"95%\" padding=\"0 3.3rem\">\n          <label htmlFor=\"title\">시작일자</label>\n          <DatePick startDate={startDate} setStartDate={setStartDate} />\n        </WriteInputContainer>\n        <WriteInputContainer>\n          <label htmlFor=\"title\">모집구분</label>\n          <div>\n            <SelectBox\n              defaultValue={devType}\n              options={devTypeOptions}\n              devTypeOptions={devTypeOptions}\n              setDevType={setDevType}\n              setDevStack={setDevStack}\n            ></SelectBox>\n          </div>\n        </WriteInputContainer>\n      </DivContainer>\n      <DivContainer>\n        <WriteInputContainer width=\"95%\">\n          <label htmlFor=\"title\">모집인원</label>\n          <div>\n            <input\n              type=\"number\"\n              defaultValue={totalHeadCount}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setTotalHeadCount(parseInt(e.target.value));\n              }}\n              id=\"title\"\n              placeholder=\"ex) 10\"\n            />\n            <span>명</span>\n          </div>\n        </WriteInputContainer>\n\n        <WriteInputContainer>\n          <label htmlFor=\"title\">진행방식</label>\n          <div>\n            <SelectBox\n              defaultValue={onOff}\n              options={onOffOptions}\n              setOnOff={setOnOff}\n            ></SelectBox>\n          </div>\n        </WriteInputContainer>\n      </DivContainer>\n\n      <CheckBox\n        setDevStack={setDevStack}\n        devType={devType}\n        devStack={devStack}\n      />\n      <WriteInputContainer height=\"400px\">\n        <label htmlFor=\"content\">모집 상세</label>\n        <div>\n          <textarea\n            defaultValue={content}\n            onChange={(e) => {\n              setContent(e.target.value);\n            }}\n            id=\"content\"\n            placeholder=\"모집 상세 내용을 입력해주세요.\"\n          />\n        </div>\n      </WriteInputContainer>\n      {!isEdit && (\n        <ButtonContainer>\n          <ButtonPrimary onClick={openModalHandler2} background=\"#B6B6B6\">\n            취소\n          </ButtonPrimary>\n          <ButtonPrimary onClick={openModalHandler1}>작성완료</ButtonPrimary>\n        </ButtonContainer>\n      )}\n\n      {isOpenCancel && (\n        <Modal\n          isOpen={isOpenCancel}\n          handleModal={handleInit}\n          setIsOpen={setIsOpenCancel}\n        >\n          등록을 취소하시겠습니까?\n        </Modal>\n      )}\n\n      {isOpenOk && (\n        <Modal\n          isOpen={isOpenOk}\n          handleModal={createPosts}\n          setIsOpen={setIsOpenOk}\n        >\n          스터디 모집 글을 등록하시겠습니까?\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default PostStudy;\n\nconst DivContainer = styled.div`\n  display: flex;\n  margin-top: 1rem;\n  justify-content: space-between;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n","import styled from 'styled-components';\nimport { useLocation } from 'react-router-dom';\nimport PostCommunity from './PostCommunity';\nimport PostStudy from './PostStudy';\n\ninterface Props {\n  setIsWrite: (isWrite: boolean) => void;\n}\n\ninterface StyleProps {\n  community: boolean;\n}\n\n// 스터디 모집 글쓰기, 커뮤니티 글쓰기 컴포넌트 container\nconst WriteBox = ({ setIsWrite }: Props) => {\n  const { pathname } = useLocation();\n\n  return (\n    <WrapPanel>\n      <HeaderContainer>\n        {pathname === '/community' ? '커뮤니티 글쓰기' : '스터디 만들기'}\n      </HeaderContainer>\n\n      <WriteContainer community={pathname === '/community' ? true : false}>\n        {pathname === '/community' ? (\n          <PostCommunity setIsWrite={setIsWrite} />\n        ) : (\n          <PostStudy setIsWrite={setIsWrite} />\n        )}\n      </WriteContainer>\n    </WrapPanel>\n  );\n};\n\nexport default WriteBox;\n\nconst WrapPanel = styled.div`\n  width: 1000px;\n  margin: 0 auto;\n  background-color: #fff;\n`;\n\nconst WriteContainer = styled.div<StyleProps>`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: ${(props) => (props.community ? '700px' : '1230px')};\n  border: 1px solid #e3e3e3;\n  border-radius: 0 0 30px 30px;\n  margin-bottom: 6rem;\n  padding: 49px 55px 0px 55px;\n`;\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  align-items: flex-end;\n  width: 100%;\n  height: 134px;\n  background-color: #2584f4;\n  border-radius: 30px 30px 0 0;\n  color: white;\n  font-family: 'Pretendard-Bold';\n  font-size: 35px;\n  padding-left: 55px;\n  padding-bottom: 29px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\ndeclare module 'react' {\n  interface HTMLAttributes<T> extends AriaAttributes, DOMAttributes<T> {\n    value?: string;\n  }\n}\n\ninterface Props {\n  value: string;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst SearchBar: React.FC<Props> = ({ value, onChange }) => {\n  return (\n    <>\n      <Container>\n        <Icon>\n          <i\n            className=\"fa-solid fa-magnifying-glass fa-fw\"\n            value={value}\n            onChange={onChange}\n          ></i>\n        </Icon>\n        <input\n          type=\"search\"\n          id=\"search\"\n          value={value}\n          contentEditable\n          onChange={onChange}\n          autoComplete=\"off\"\n        />\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBar;\n\nconst Container = styled.div`\n  position: relative;\n  height: 58px;\n\n  input {\n    width: 400px;\n    height: 58px;\n    background: white;\n    border: 2px solid #dbdbdb;\n    font-size: 1.3rem;\n    float: right;\n    padding-left: 30px;\n    padding-right: 50px;\n    border-radius: 50px;\n\n    &:focus,\n    &:active {\n      border-color: #2584f4;\n    }\n\n    // input type=\"search\" 우측 x 아이콘 삭제\n    &::-webkit-search-decoration,\n    &::-webkit-search-cancel-button,\n    &::-webkit-search-results-button,\n    &::-webkit-search-results-decoration {\n      -webkit-appearance: none;\n    }\n  }\n`;\n\nconst Icon = styled.span`\n  position: absolute;\n  top: 50%;\n  right: 16px;\n  z-index: 1;\n  font-size: 23px;\n  cursor: pointer;\n  transform: translate(0, -50%);\n`;\n","import { ButtonPrimary } from './Button/Button';\nimport styled from 'styled-components';\n\ninterface Props {\n  onWriteClick: () => void;\n  posts: object[];\n}\n\nconst BoardHeader = ({ onWriteClick, posts }: Props) => {\n  return (\n    <>\n      <Thead>\n        <TotalNum>{posts.length}개의 글</TotalNum>\n        <ButtonPrimary onClick={onWriteClick}>글쓰기</ButtonPrimary>\n      </Thead>\n    </>\n  );\n};\n\nexport default BoardHeader;\n\nconst Thead = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  border-bottom: 1px solid #000;\n  padding-bottom: 15px;\n`;\n\nconst TotalNum = styled.span`\n  font-size: 17px;\n  font-family: 'Pretendard-Medium';\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { ProfileImgXS } from './Img/ProfileImg';\nimport { communityDataType } from './StudyCard';\nimport img from '../../images/pf_sample.png';\n\ninterface Props {\n  data: communityDataType;\n}\n\nconst CommunityCard = ({ data }: Props) => {\n  return (\n    <StyledLink to={`/community/detail/${data.id}`}>\n      <Item>\n        <h4>{data.title}</h4>\n        <div className=\"meta-info\">\n          <span className=\"user\">\n            <ProfileImgXS src={img} /> {data.nickName}\n          </span>\n          <span className=\"meta\">\n            <em>{data.dateCreated}</em>\n            <em className=\"like\">\n              <i className=\"fa-solid fa-heart\"></i>202\n            </em>\n          </span>\n        </div>\n      </Item>\n    </StyledLink>\n  );\n};\n\nexport default CommunityCard;\n\nconst Item = styled.div`\n  width: 100%;\n  border: 1px solid #ededed;\n  border-radius: 25px;\n  padding: 25px 30px 20px;\n  cursor: pointer;\n  margin-bottom: 12px;\n\n  &:hover {\n    border-color: #999;\n    box-shadow: 0 8px 10px 10px rgba(0, 0, 0, 0.01);\n  }\n\n  h4 {\n    font-size: 21px;\n    font-family: 'Pretendard-Medium';\n  }\n\n  .meta-info {\n    display: flex;\n    justify-content: space-between;\n    font-size: 15px;\n    padding-top: 13px;\n\n    span {\n      display: flex;\n      align-items: center;\n      gap: 4px;\n    }\n    .meta {\n      gap: 15px;\n\n      .like {\n        i {\n          margin-right: 2px;\n          opacity: 0.2;\n        }\n      }\n    }\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Loading from '../Layout/Loading';\nimport CommunityCard from './CommunityCard';\nimport { communityDataType } from './StudyCard';\n\ninterface Props {\n  posts: communityDataType[];\n}\n\nconst BoardListContents = ({ posts }: Props) => {\n  return (\n    <>\n      {posts[0] !== undefined ? (\n        <ItemGroup>\n          {posts.map((data: communityDataType, idx) => (\n            <CommunityCard key={idx} data={data} />\n          ))}\n        </ItemGroup>\n      ) : (\n        <Loading />\n      )}\n    </>\n  );\n};\n\nexport default BoardListContents;\n\nconst ItemGroup = styled.div`\n  margin: 25px 0 20px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  postsPerPage: number;\n  totalPosts: number;\n  paginate: (number: number) => void;\n}\n\nconst Pagination = ({ postsPerPage, totalPosts, paginate }: Props) => {\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  return (\n    <div>\n      <PageUl className=\"pagination\">\n        {pageNumbers.map((number) => (\n          <PageLi key={number} className=\"page-item\">\n            <PageSpan onClick={() => paginate(number)} className=\"page-link\">\n              {number}\n            </PageSpan>\n          </PageLi>\n        ))}\n      </PageUl>\n    </div>\n  );\n};\n\nexport default Pagination;\n\nconst PageUl = styled.ul`\n  display: flex;\n  justify-content: center;\n  list-style: none;\n  text-align: center;\n  border-radius: 3px;\n  color: #666;\n  gap: 10px;\n  padding: 1px;\n`;\n\nconst PageLi = styled.li`\n  transition: all 0s;\n  cursor: pointer;\n`;\n\nconst PageSpan = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 17px;\n  font-family: 'Pretendard-Medium';\n  background: #fff;\n  border: 1px solid #eee;\n  border-radius: 5px;\n  width: 38px;\n  height: 38px;\n\n  &:hover {\n    cursor: pointer;\n    background-color: #ddd;\n  }\n  &:focus::after {\n    color: white;\n    background-color: #000;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport WriteBox from '../components/Post/PostBox';\nimport SearchBar from '../components/UI/Filter/SearchInputBar';\nimport BoardHeader from '../components/UI/BoardHeader';\nimport BoardListContents from '../components/UI/BoardListContents';\nimport Pagination from '../components/UI/Filter/Pagination';\nimport styled from 'styled-components';\nimport { communityDataType } from '../components/UI/StudyCard';\n\ninterface Props {\n  posts: communityDataType[];\n}\n\nfunction Community({ posts }: Props) {\n  const [isWrite2, setIsWrite2] = useState(false);\n  const [postData, setPostData] = useState<communityDataType[]>([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n  const [search, setSearch] = useState('');\n\n  const filtered = postData.filter((el) => {\n    return el.title.toUpperCase().includes(search.toUpperCase());\n  });\n\n  const onSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  };\n\n  const onWriteClick = () => {\n    setIsWrite2(true);\n  };\n\n  useEffect(() => {\n    setPostData(posts);\n  }, [posts]);\n\n  const indexOfLast = currentPage * postsPerPage;\n  const indexOfFirst = indexOfLast - postsPerPage;\n  const currentPosts = (posts: communityDataType[]) => {\n    let currentPosts: communityDataType[] = [];\n    currentPosts = posts?.slice(indexOfFirst, indexOfLast);\n    return currentPosts;\n  };\n\n  return (\n    <Container>\n      {isWrite2 ? (\n        <WriteBox setIsWrite={setIsWrite2} />\n      ) : (\n        <ConPanel>\n          <SubPageTop>\n            <TypeH2>커뮤니티</TypeH2>\n            <SearchBar value={search} onChange={onSearchChange} />\n          </SubPageTop>\n          <BoardHeader onWriteClick={onWriteClick} posts={postData} />\n          <BoardListContents posts={currentPosts(filtered)} />\n          <Pagination\n            postsPerPage={postsPerPage}\n            totalPosts={posts.length}\n            paginate={setCurrentPage}\n          ></Pagination>\n        </ConPanel>\n      )}\n    </Container>\n  );\n}\n\nexport default Community;\n\nconst Container = styled.div`\n  max-width: 1290px;\n  width: 100%;\n  margin: 0 auto;\n  padding: 0 0 80px;\n`;\n\nconst ConPanel = styled.div`\n  width: 100%;\n  min-height: 90vh;\n  padding: 50px 0 25px;\n`;\n\nconst SubPageTop = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  gap: 25px;\n`;\n\nconst TypeH2 = styled.h2`\n  font-size: 40px;\n  font-family: 'Pretendard-Bold';\n`;\n"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","REGEX","byteToHex","i","push","toString","substr","arr","offset","arguments","length","undefined","toLowerCase","validate","TypeError","options","buf","rnds","random","stringify","setIsWrite","navigate","useNavigate","titleInput","useRef","useState","title","setTitle","content","setContent","dateCreated","Date","nickName","useSelector","state","loginReducer","isOpenOk","setIsOpenOk","isOpenCancel","setIsOpenCancel","useEffect","current","focus","postsCollectionRef","collection","db","createPosts","id","uuidv4","addDoc","board","toLocaleDateString","htmlFor","defaultValue","onChange","e","target","value","placeholder","ref","height","ButtonContainer","Button","onClick","background","Modal","isOpen","handleModal","setIsOpen","styled","isEdit","startDate","setStartDate","devType","setDevType","devStack","setDevStack","totalHeadCount","setTotalHeadCount","onOff","setOnOff","haveHeadCount","DivContainer","width","padding","DatePick","SelectBox","devTypeOptions","type","parseInt","onOffOptions","CheckBox","pathname","useLocation","WrapPanel","HeaderContainer","WriteContainer","community","props","Container","Icon","className","contentEditable","autoComplete","onWriteClick","posts","Thead","TotalNum","data","StyledLink","to","Item","ProfileImg","src","img","Link","ItemGroup","map","idx","Loading","postsPerPage","totalPosts","paginate","pageNumbers","Math","ceil","PageUl","number","PageLi","PageSpan","isWrite2","setIsWrite2","postData","setPostData","currentPage","setCurrentPage","search","setSearch","filtered","filter","el","toUpperCase","includes","indexOfLast","indexOfFirst","ConPanel","SubPageTop","TypeH2","currentPosts","slice"],"sourceRoot":""}