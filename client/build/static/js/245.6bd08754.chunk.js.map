{"version":3,"file":"static/js/245.6bd08754.chunk.js","mappings":"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","sources":["components/UI/Button/Button.ts","components/UI/Input/LoginInput.tsx","components/UI/Modal/ModalSucces.tsx","pages/SignUp.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\ninterface Props {\n  width?: string,\n  height?: string,\n  background?: string,\n  borderColor?: string,\n}\n\n// 소셜 로그인 버튼\nexport const ButtonSnsLogin = styled.div<Props>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: \"Pretendard-Medium\";\n  width: ${(props) => props.width || \"100%\"};\n  height: 54px;\n  font-size: 20px;\n  color: ${(props) => props.color || \"white\"};\n  background: ${(props) => props.background || \"#2584f4\"};\n  border: 1px solid ${(props) => props.borderColor || \"none\"};\n  border-radius: 0.5rem;\n  margin: 0.6rem 0;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 12px 16px 0 rgba(0, 0, 0, 0.24),\n      0 17px 50px 0 rgba(0, 0, 0, 0.19);\n  }\n`;\n\n// Nav 로그인 & 회원가입 버튼, 글쓰기 버튼, 더보기 버튼\nexport const ButtonPrimary = styled.button<Props>`\n  background: ${(props) => props.background || \"#2584f4\"};\n  color: ${(props) => props.color || \"white\"};\n  border-radius: 50px;\n  width: ${(props) => props.width || \"143px\"};\n  height: ${(props) => props.height || \"50px\"};\n  transition-duration: 0.4s;\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n  margin-left: 10px;\n\n  &:hover {\n    background-color: ${(props) => props.background || \"#2863fb\"};\n    box-shadow: 0 12px 16px 0 rgba(0, 0, 0, 0.24),\n      0 17px 50px 0 rgba(0, 0, 0, 0.19);\n  }\n`;\n\n// 수정, 삭제, 목록으로, 참여하기, 취소, 작성완료 버튼\nexport const ButtonSecondary = styled.button<Props>`\n  background: ${(props) => props.background || \"white\"};\n  color: ${(props) => props.color || \"#2584F4\"};\n  border-radius: 50px;\n  border: 1px solid;\n  border-color: ${(props) => props.color || \"#2584F4\"};\n  width: ${(props) => props.width || \"91px\"};\n  height: ${(props) => props.height || \"44px\"};\n  transition-duration: 0.4s;\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n\n  &:hover {\n    background-color: ${(props) => props.background || \"#2584F4\"};\n    color: ${(props) => props.color || \"white\"};\n    box-shadow: 0 12px 16px 0 rgba(0, 0, 0, 0.24),\n      0 17px 50px 0 rgba(0, 0, 0, 0.19);\n  }\n`;\n\n// 로그인 및 회원가입 버튼\nexport const ButtonLogin = styled.button<Props>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: \"Pretendard-Medium\";\n  width: ${(props) => props.width || \"100%\"};\n  height: 54px;\n  font-size: 20px;\n  color: ${(props) => props.color || \"white\"};\n  background: ${(props) => props.background || \"#2584f4\"};\n  border: 1px solid ${(props) => props.borderColor || \"none\"};\n  border-radius: 0.5rem;\n  margin: 0.6rem 0;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 12px 16px 0 rgba(0, 0, 0, 0.24),\n      0 17px 50px 0 rgba(0, 0, 0, 0.19);\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const StyledInputContainer = styled.div<{height: string}>`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-items: center;\n  width: 100%;\n  height: ${(props) => props.height || \"90px\" };\n  margin-bottom: 1.5rem;\n\n  label {\n    margin-top: 1rem;\n    margin-bottom: 0.5rem;\n    font-size: 17px;\n    font-family: \"Pretendard-Medium\";\n  }\n\n  input {\n    width: 100%;\n    height: 50px;\n    border: 1px solid black;\n    border-radius: 0.5rem;\n    padding: 0;\n    font-size: 18px;\n    text-indent: 2.5rem;\n  }\n\n  div {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n\n  i {\n    position: absolute;\n    top: 1.1rem;\n    left: 1rem;\n    color: ${(props) => props.color || \"#CCCCCC\"};\n  }\n`;\n\n\nexport const UserInfoContainer = styled.div<{height: string}>`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-items: center;\n  width: 100%;\n  height: ${(props) => props.height || \"90px\" };\n\n  label {\n    margin-top: 1rem;\n    margin-bottom: 0.5rem;\n    font-size: 17px;\n    font-family: \"Pretendard-Medium\";\n  }\n\n  input {\n    width: 100%;\n    height: 40px;\n    border: 1px solid black;\n    border-radius: 0.5rem;\n    padding: 0;\n    font-size: 16px;\n    text-indent: 1.2rem;\n  }\n\n  div {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n\n  i {\n    position: absolute;\n    top: 1.75rem;\n    left: 1rem;\n    color: ${(props) => props.color || \"#CCCCCC\"};\n  }\n`;","import styled from 'styled-components';\nimport ImgObject from '../../../images/icon_team3.png';\n\ninterface Props {\n    isOpen: boolean;\n    setIsOpen: (isOpen: boolean) => void;\n}\n\nconst ModalSucces = ({ isOpen, setIsOpen } :Props) => {\n  const openModalHandler = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <>\n      {isOpen && (\n        <StyledModal className=\"modal\" onClick={openModalHandler}>\n          <StyledModalCon onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-body soon\">\n              <div>\n                <b>회원가입 완료</b>\n                <p>스터디하자에 오신것을 환영합니다!</p>\n                <img className=\"icon-team3\" src={ImgObject} alt=\"\"></img>\n              </div>\n            </div>\n            <StyledModalFooter>\n              <button\n                type=\"button\"\n                className=\"btn-modal cta\"\n                onClick={openModalHandler}\n              >\n                확인\n              </button>\n            </StyledModalFooter>\n          </StyledModalCon>\n        </StyledModal>\n      )}\n    </>\n  );\n};\n\nexport default ModalSucces;\n\nconst StyledModal = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  width: 100%;\n  height: 100vh;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.75);\n  z-index: 10;\n`;\nconst StyledModalCon = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 450px;\n  min-height: 500px;\n  margin: 0 auto;\n  text-align: center;\n  background: #fff;\n  border-radius: 30px;\n  * {\n    flex: 1 0;\n  }\n  .modal-body {\n    display: flex;\n    align-items: center;\n    b {\n      display: inline-block;\n      padding-bottom: 16px;\n      font-size: 40px;\n      font-family: 'Pretendard-ExtraBold';\n    }\n    p,\n    strong {\n      font-size: 26px;\n    }\n    .icon-team3 {\n      margin-top: 20px;\n      width: 187px;\n    }\n  }\n`;\nconst StyledModalFooter = styled.div`\n  overflow: hidden;\n  display: flex;\n  flex: none;\n  height: 78px;\n  border-bottom-left-radius: 30px;\n  border-bottom-right-radius: 30px;\n  button {\n    font-size: 20px;\n    font-weight: 500;\n  }\n  .btn-modal.cta {\n    background: #2584f4;\n    color: #fff;\n  }\n  .btn-modal.cta:hover {\n    background: #2863fb;\n    color: #fff;\n  }\n`;\n","import React, { useEffect, useRef, useState } from 'react';\n\nimport styled from 'styled-components';\n\nimport Footer from '../components/Layout/Footer';\nimport { StyledInputContainer } from '../components/UI/Input/LoginInput';\nimport { ButtonLogin } from '../components/UI/Button/Button';\nimport ModalSucces from '../components/UI/Modal/ModalSucces';\n\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  updateProfile,\n} from 'firebase/auth';\nimport { db } from '../firebase-config';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { useNavigate } from 'react-router-dom';\n\nfunction SignUp() {\n  const navigate = useNavigate();\n  const [isOpen, setIsOpen] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordCheck, setPasswordCheck] = useState('');\n  const [nickName, setNickName] = useState('');\n  const [validationEmail, setValidationEmail] = useState('none');\n  const [validationPassword, setValidationPassword] = useState('none');\n  const [validationNickName, setValidationNickName] = useState('none');\n\n  const nameInput = useRef<HTMLInputElement>(null);\n  const usersCollectionRef = collection(db, 'users');\n\n  useEffect(() => {\n    const {current} = nameInput;\n    current?.focus()\n  }, []);\n\n  // firebase 회원가입 코드\n  const auth = getAuth();\n\n  const emailChange = (e: string) => {\n    setEmail(e);\n\n    // 이메일 형식 체크 정규표현식\n    const reg =\n      /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/;\n    if (reg.test(email)) {\n      setValidationEmail('none');\n    } else {\n      setValidationEmail('block');\n    }\n  };\n\n  const passwordChange = (e: string) => {\n    setPassword(e);\n    if (e === passwordCheck && e !== '' && passwordCheck !== '') {\n      setValidationPassword('none');\n    } else {\n      setValidationPassword('block');\n    }\n  };\n\n  const passwordCheckChange = (e: string) => {\n    setPasswordCheck(e);\n    if (password === e && password !== '' && e !== '') {\n      setValidationPassword('none');\n    } else {\n      setValidationPassword('block');\n    }\n  };\n\n  const nickNameChange = (e: string) => {\n    setNickName(e);\n    if (e !== '') {\n      setValidationNickName('none');\n    } else {\n      setValidationNickName('block');\n    }\n  };\n\n  const signUpHandler = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    // 패스워드와 패스워드 확인란이 같을 때만 회원가입 실행\n    if (\n      validationPassword === 'none' &&\n      validationEmail === 'none' &&\n      validationNickName === 'none'\n    ) {\n      await createUserWithEmailAndPassword(auth, email, password)\n        .then((userCredential) => {\n          // Signed in\n          const user = userCredential.user;\n          updateProfile(user, { displayName: nickName });\n          setIsOpen(true);\n          createUsers();\n          setEmail('');\n          setPassword('');\n          setPasswordCheck('');\n          setNickName('');\n          navigate('/login');\n        })\n        .catch((error) => {\n          const errorCode = error.code;\n          const errorMessage = error.message;\n          if (errorCode === 'auth/weak-password') {\n            alert('비밀번호는 숫자,영문,특수문자를 포함한 8자리 이상입니다.');\n          }\n          if (errorCode === 'auth/email-already-in-use') {\n            alert('이미 사용중인 이메일입니다.');\n          }\n        });\n    }\n  };\n\n  // firestore에 데이터 올리기\n  const createUsers = async () => {\n    const data = await addDoc(usersCollectionRef, {\n      email,\n      nickName,\n      photoUrl: '',\n    });\n  };\n\n  return (\n    <>\n      <StyledSignUpContainer>\n        <StyledSignUpTitle>StudyHaza</StyledSignUpTitle>\n        <form onSubmit={signUpHandler}>\n          <StyledInputContainer\n            height={validationEmail === 'block' ? '100px' : '90px'}\n          >\n            <label htmlFor=\"email\">이메일 계정</label>\n            <div>\n              <input\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"이메일 계정\"\n                value={email}\n                ref={nameInput}\n                onChange={(e) => emailChange(e.target.value)}\n              />\n              <i className=\"fa-solid fa-at\" />\n            </div>\n            <ValidationCheck display={validationEmail}>\n              {email === ''\n                ? '이메일을 입력해주세요.'\n                : '이메일 형식이 올바르지 않습니다.'}\n            </ValidationCheck>\n          </StyledInputContainer>\n          <StyledInputContainer\n            height={validationPassword === 'block' ? '100px' : '90px'}\n          >\n            <label htmlFor=\"password\">비밀번호</label>\n            <div>\n              <input\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"비밀번호\"\n                value={password}\n                autoComplete=\"off\"\n                onChange={(e) => passwordChange(e.target.value)}\n              />\n              <i className=\"fa-solid fa-lock\"></i>\n            </div>\n            <ValidationCheck display={validationPassword}>\n              {password === ''\n                ? '비밀번호를 입력해주세요'\n                : '비밀번호가 일치하지 않습니다.'}\n            </ValidationCheck>\n          </StyledInputContainer>\n          <StyledInputContainer\n            height={validationPassword === 'block' ? '100px' : '90px'}\n          >\n            <label htmlFor=\"passwordCheck\">비밀번호 확인</label>\n            <div>\n              <input\n                id=\"passwordCheck\"\n                type=\"password\"\n                placeholder=\"비밀번호 확인\"\n                value={passwordCheck}\n                autoComplete=\"off\"\n                onChange={(e) => passwordCheckChange(e.target.value)}\n              />\n              <i className=\"fa-solid fa-lock\"></i>\n            </div>\n            <ValidationCheck display={validationPassword}>\n              {password === ''\n                ? '비밀번호를 입력해주세요'\n                : '비밀번호가 일치하지 않습니다.'}\n            </ValidationCheck>\n          </StyledInputContainer>\n          <StyledInputContainer\n            height={validationNickName === 'block' ? '100px' : '90px'}\n          >\n            <label htmlFor=\"nickName\">닉네임</label>\n            <div>\n              <input\n                id=\"nickName\"\n                placeholder=\"사용할 닉네임\"\n                value={nickName}\n                onChange={(e) => nickNameChange(e.target.value)}\n              />\n              <i className=\"fa-solid fa-user\"></i>\n            </div>\n            <ValidationCheck display={validationNickName}>\n              {nickName === '' && '닉네임을 입력해주세요.'}\n            </ValidationCheck>\n          </StyledInputContainer>\n          <ButtonLogin>\n            가입하기\n          </ButtonLogin>\n        </form>\n        <ModalSucces isOpen={isOpen} setIsOpen={setIsOpen} />\n      </StyledSignUpContainer>\n    </>\n  );\n}\n\nexport default SignUp;\n\nconst StyledSignUpContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: auto;\n  width: 410px;\n  height: 910px;\n\n  hr {\n    width: 100%;\n    border: 0.5px solid #dedede;\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n  }\n\n  form {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n  }\n`;\n\nconst StyledSignUpTitle = styled.h1`\n  font-size: 50px;\n  font-weight: bold;\n  margin-top: 1rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst ValidationCheck = styled.label<{ display: string }>`\n  display: ${(props) => props.display || 'none'};\n  color: red;\n  margin-top: -0.5rem;\n`;\n"],"names":["ButtonSnsLogin","styled","props","width","color","background","borderColor","ButtonPrimary","height","ButtonSecondary","ButtonLogin","StyledInputContainer","UserInfoContainer","isOpen","setIsOpen","openModalHandler","StyledModal","className","onClick","StyledModalCon","e","stopPropagation","src","ImgObject","alt","StyledModalFooter","type","navigate","useNavigate","useState","email","setEmail","password","setPassword","passwordCheck","setPasswordCheck","nickName","setNickName","validationEmail","setValidationEmail","validationPassword","setValidationPassword","validationNickName","setValidationNickName","nameInput","useRef","usersCollectionRef","collection","db","useEffect","current","focus","auth","getAuth","signUpHandler","preventDefault","createUserWithEmailAndPassword","then","userCredential","user","updateProfile","displayName","createUsers","catch","error","errorCode","code","message","alert","addDoc","photoUrl","StyledSignUpContainer","StyledSignUpTitle","onSubmit","htmlFor","id","placeholder","value","ref","onChange","test","emailChange","target","ValidationCheck","display","autoComplete","passwordChange","passwordCheckChange","nickNameChange","Button"],"sourceRoot":""}