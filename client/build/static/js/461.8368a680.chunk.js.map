{"version":3,"file":"static/js/461.8368a680.chunk.js","mappings":"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","sources":["components/UI/Modal/ModalSoon.tsx","components/Detail/DetailStudy.tsx","components/Detail/DetailCommunity.tsx","components/Edit/EditStudy.tsx","components/Edit/EditCommunity.tsx","pages/Detail.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport ImgObject from '../../../images/icon_team.png';\n\ninterface Props {\n    children: string;\n    isOpen: boolean;\n    setIsOpen: (isOpen: boolean) => void;\n}\n\nfunction ModalSoon({ children, isOpen, setIsOpen } :Props) {\n  const openModalHandler = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <>\n      {isOpen ? (\n        <StyledModal className=\"modal\" onClick={openModalHandler}>\n          <StyledModalCon onClick={(e) => e.stopPropagation()}>\n            <button\n              type=\"button\"\n              className=\"btn-modal-cls\"\n              onClick={openModalHandler}\n            ></button>\n            <div className=\"modal-body soon\">\n              <div>\n                <b>Coming Soon</b>\n                <p>{children} 준비중 입니다.</p>\n                <img className=\"icon-team\" src={ImgObject} alt=\"\"></img>\n              </div>\n            </div>\n            <StyledModalFooter className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn-modal cta\"\n                onClick={openModalHandler}\n              >\n                확인\n              </button>\n            </StyledModalFooter>\n          </StyledModalCon>\n        </StyledModal>\n      ) : null}\n      {/* <button onClick={openModalHandler}>모달 여닫기</button> */}\n    </>\n  );\n}\n\nexport default ModalSoon;\n\nconst StyledModal = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  width: 100%;\n  height: 100vh;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.75);\n`;\nconst StyledModalCon = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 450px;\n  min-height: 500px;\n  margin: 0 auto;\n  text-align: center;\n  background: #fff;\n  border-radius: 30px;\n  * {\n    flex: 1 0;\n  }\n  .modal-body {\n    display: flex;\n    align-items: center;\n    b {\n      display: inline-block;\n      padding-bottom: 16px;\n      font-size: 40px;\n      font-family: 'Pretendard-ExtraBold';\n    }\n    p,\n    strong {\n      font-size: 26px;\n    }\n    .icon-team {\n      margin-top: 20px;\n      width: 187px;\n    }\n  }\n`;\nconst StyledModalFooter = styled.div`\n  overflow: hidden;\n  display: flex;\n  flex: none;\n  height: 78px;\n  border-bottom-left-radius: 30px;\n  border-bottom-right-radius: 30px;\n  button {\n    font-size: 20px;\n    font-weight: 500;\n  }\n  .btn-modal.cta {\n    background: #2584f4;\n    color: #fff;\n  }\n  .btn-modal.cta:hover {\n    background: #2863fb;\n    color: #fff;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { ProfileImgXS } from '../UI/Img/ProfileImg';\nimport { ButtonPrimary } from '../UI/Button/Button';\nimport ModalSoon from '../UI/Modal/ModalSoon';\nimport { RootState } from '../../redux/store';\nimport Loading from '../Layout/Loading';\nimport { frontStacks, backStacks, stackBackgrounds } from '../../StackData';\n\ntype dataType = {\n  board: string;\n  content: string;\n  dateCreated: string;\n  dateUpdated: string;\n  devStack: string[];\n  devType: string;\n  haveHeadCount: number;\n  id: string;\n  nickName: string;\n  onOff: string;\n  startDate: string;\n  title: string;\n  totalHeadCount: number;\n};\n\ninterface Props {\n  data: dataType;\n}\n\nfunction DetailStudy({ data }: Props) {\n  const photoUrl = useSelector(\n    (state: RootState) => state.loginReducer.photoUrl,\n  );\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const modalSoonHandler = () => {\n    setIsOpen(true);\n  };\n\n  const pick = (item: string) => {\n    return stackBackgrounds\n      .filter((el) => el.stack === item)\n      .map((el) => el.color)[0];\n  };\n\n  const devStackWord = (devType: string, skill: string) => {\n    let a = '';\n    let idx = 0;\n    if (devType === 'frontend') {\n      idx = frontStacks.findIndex((el) => el === skill);\n      a = 'fe';\n    }\n\n    if (devType === 'backend') {\n      idx = backStacks.findIndex((el) => el === skill);\n      a = 'be';\n    }\n\n    if (idx >= 9) {\n      return `sk_${a}${idx + 1}`;\n    } else {\n      return `sk_${a}${idx + 1}`;\n    }\n  };\n\n  return (\n    <>\n      <ViewContainer>\n        {data.board !== undefined ? (\n          <>\n            <Title>{data.title}</Title>\n            <Info>\n              <ProfileImgXS\n                src={\n                  photoUrl === ''\n                    ? 'https://avatars.githubusercontent.com/u/56163157?v=4'\n                    : photoUrl\n                }\n              />\n              <Writer>{data.nickName}</Writer>\n              <hr />\n              <Date>{data.dateCreated}</Date>\n            </Info>\n            <DevInfo>\n              <InnerBox>\n                <ListLine>\n                  <List>\n                    모집 구분 <Dot>•</Dot>{' '}\n                    <span>\n                      {data.devType === 'frontend' ? '프론트엔드' : '백엔드'}\n                    </span>\n                  </List>\n                  <List>\n                    모집 인원 <Dot>•</Dot>{' '}\n                    <span>\n                      {data.haveHeadCount} / {data.totalHeadCount}\n                    </span>\n                  </List>\n                </ListLine>\n\n                <ListLine>\n                  <List>\n                    시작 일시 <Dot>•</Dot> <span>{data.startDate}</span>\n                  </List>\n                  <List>\n                    진행 방법 <Dot>•</Dot>{' '}\n                    <span>{data.onOff === 'on' ? '온라인' : '오프라인'}</span>\n                  </List>\n                </ListLine>\n              </InnerBox>\n              <DevInnerBox>\n                <ListLine>\n                  <DevList>\n                    <div>주요 기술</div>\n                    <DevStackList>\n                      {data.devStack &&\n                        data.devStack.map((el, idx) => {\n                          return (\n                            <li key={idx} style={{ background: pick(el) }}>\n                              <img\n                                src={\n                                  process.env.PUBLIC_URL +\n                                  `/skill/${devStackWord(\n                                    data.devType,\n                                    `${el}`,\n                                  )}.png`\n                                }\n                                alt=\"\"\n                              />\n                              <div>{el}</div>\n                            </li>\n                          );\n                        })}\n                    </DevStackList>\n                  </DevList>\n                </ListLine>\n              </DevInnerBox>\n            </DevInfo>\n            <Content>{data.content}</Content>\n            <ButtonBox>\n              <ButtonPrimary background=\"#2863FB\" onClick={modalSoonHandler}>\n                참여하기\n              </ButtonPrimary>\n              <ModalSoon isOpen={isOpen} setIsOpen={setIsOpen}>\n                참여하기 기능\n              </ModalSoon>\n            </ButtonBox>\n          </>\n        ) : (\n          <Loading />\n        )}\n      </ViewContainer>\n    </>\n  );\n}\n\nexport default DetailStudy;\n\nconst ViewContainer = styled.div`\n  height: 800px;\n  background: #ffffff;\n  box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.05);\n  border-radius: 30px;\n  margin: 2rem 0;\n  padding: 3rem;\n  display: flex;\n  flex-direction: column;\n\n  hr {\n    width: 100%;\n    border: thin solid #747474;\n\n    margin-bottom: 33px;\n  }\n`;\n\nconst Title = styled.h1`\n  font-family: 'Pretendard-Regular';\n  font-weight: 700;\n  font-size: 25px;\n  line-height: 48px;\n  letter-spacing: -0.03em;\n`;\n\nconst DevInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 188px;\n  background: #f9f9f9;\n  border: 1px solid #e1e1e1;\n  border-radius: 15px;\n  margin: 1.5rem 0;\n  padding: 30px 35px;\n`;\n\nconst ListLine = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst List = styled.span`\n  margin-right: 3rem;\n  margin-bottom: 1.5rem;\n\n  p {\n    margin-bottom: 10px;\n  }\n\n  span {\n    font-weight: bold;\n  }\n`;\n\nconst Content = styled.div`\n  height: 40%;\n  font-family: 'Pretendard-Regular';\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 30px;\n  margin-top: 1rem;\n  padding-left: 3px;\n`;\n\nconst Info = styled.div`\n  width: 210px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 1rem 0;\n\n  hr {\n    width: 10px;\n    border: 1px solid #d2d2d2;\n    transform: rotate(90deg);\n    margin: auto;\n  }\n`;\n\nconst Writer = styled.span`\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 19px;\n  margin: 0 5px;\n`;\n\nconst Date = styled.span`\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 19px;\n  margin: 0 5px;\n`;\n\nconst ButtonBox = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 1rem;\n`;\n\nconst InnerBox = styled.div`\n  display: flex;\n`;\n\nconst DevInnerBox = styled.div``;\n\nconst DevList = styled.div`\n  div {\n    margin-bottom: 7px;\n  }\n\n  img {\n    width: 30px;\n  }\n`;\n\nconst DevStackList = styled.ul`\n  width: 100%;\n  display: flex;\n  gap: 10px;\n\n  li {\n    display: flex;\n    align-items: center;\n    color: white;\n    border-radius: 8px;\n    font-weight: bold;\n\n    div {\n      padding: 5px 10px 0 0;\n    }\n  }\n`;\n\nconst Dot = styled.span`\n  color: #e1e1e1;\n`;\n","import styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { ProfileImgXS } from '../UI/Img/ProfileImg';\nimport { RootState } from '../../redux/store';\nimport Loading from '../Layout/Loading';\n\ntype dataType = {\n  board: string;\n  content: string;\n  dateCreated: string;\n  id: string;\n  nickName: string;\n  title: string;\n};\n\ninterface Props {\n  data: dataType;\n}\nfunction DetailCommunity({ data }: Props) {\n  const photoUrl = useSelector(\n    (state: RootState) => state.loginReducer.photoUrl,\n  );\n\n  return (\n    <>\n      <ViewContainer>\n        {data.board !== undefined ? (\n          <>\n            <Title>{data.title}</Title>\n            <Info>\n              <ProfileImgXS\n                src={\n                  photoUrl === ''\n                    ? 'https://avatars.githubusercontent.com/u/56163157?v=4'\n                    : photoUrl\n                }\n              />\n              <Writer>{data.nickName}</Writer>\n              <hr />\n              <Date>{data.dateCreated}</Date>\n            </Info>\n            <hr />\n            <Content>{data.content}</Content>\n          </>\n        ) : (\n          <Loading />\n        )}\n      </ViewContainer>\n    </>\n  );\n}\n\nexport default DetailCommunity;\n\nconst ViewContainer = styled.div`\n  height: 650px;\n  background: #ffffff;\n  box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.05);\n  border-radius: 30px;\n  margin: 2rem 0;\n  padding: 3rem;\n  display: flex;\n  flex-direction: column;\n\n  hr {\n    width: 100%;\n    border: thin solid #747474;\n\n    margin-bottom: 33px;\n  }\n`;\n\nconst Title = styled.h1`\n  font-family: 'Pretendard-Regular';\n  font-weight: 700;\n  font-size: 25px;\n  line-height: 48px;\n  letter-spacing: -0.03em;\n`;\n\nconst Content = styled.div`\n  font-family: 'Pretendard-Regular';\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 30px;\n  margin-left: 8px;\n`;\n\nconst Info = styled.div`\n  width: 210px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 1rem 0;\n\n  hr {\n    width: 10px;\n    border: 1px solid #d2d2d2;\n    transform: rotate(90deg);\n    margin: auto;\n  }\n`;\n\nconst Writer = styled.span`\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 19px;\n  margin: 0 5px;\n`;\n\nconst Date = styled.span`\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 19px;\n  margin: 0 5px;\n`;\n","import React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { ButtonSecondary } from '../UI/Button/Button';\nimport { WriteInputContainer } from '../Post/UI/PostInput';\nimport { SelectBox } from '../Post/UI/SelectBox';\nimport { DatePick } from '../Post/UI/DatePick';\nimport CheckBox from '../Post/UI/CheckBox';\nimport Modal from '../UI/Modal/Modal';\nimport { devTypeOptions, onOffOptions } from '../../StackData';\n\ntype dataType = {\n  board: string;\n  content: string;\n  dateCreated: string;\n  dateUpdated: string;\n  devStack: string[];\n  devType: string;\n  haveHeadCount: number;\n  id: string;\n  nickName: string;\n  onOff: string;\n  startDate: Date;\n  title: string;\n  totalHeadCount: number;\n};\n\ninterface Props {\n  data: dataType;\n  onUpdatePost: (editData: object) => void;\n  toggleIsEdit: () => void;\n}\n\nconst EditStudy = ({ data, onUpdatePost, toggleIsEdit }: Props) => {\n  const titleInput = useRef<HTMLInputElement>(null);\n\n  const [editTitle, setEditTitle] = useState(data.title);\n  const [editStartDate, setEditStartDate] = useState(new Date(data.startDate));\n  const [editDevType, setEditDevType] = useState(data.devType);\n  const [editDevStack, setEditDevStack] = useState(data.devStack);\n  const [editTotalHeadCount, setEditTotalHeadCount] = useState(\n    data.totalHeadCount,\n  );\n  const [editOnOff, setEditOnOff] = useState(data.onOff);\n  const [editContent, setEditContent] = useState(data.content);\n  const dateUpdated = new Date().toLocaleDateString();\n\n  const [isOpenOk, setIsOpenOk] = useState(false);\n  const [isOpenCancel, setIsOpenCancel] = useState(false);\n\n  const editData = {\n    title: editTitle,\n    startDate: editStartDate.toLocaleDateString(),\n    devType: editDevType,\n    devStack: editDevStack,\n    totalHeadCount: editTotalHeadCount,\n    onOff: editOnOff,\n    content: editContent,\n    dateUpdated,\n  };\n\n  useEffect(() => {\n    const { current } = titleInput;\n    current?.focus();\n  }, []);\n\n  // 수정 완료 버튼\n  const handleEdit = () => {\n    onUpdatePost(editData);\n  };\n\n  // 수정 취소\n  const handleInit = () => {\n    toggleIsEdit();\n    setEditTitle(data.title);\n    setEditStartDate(data.startDate);\n    setEditDevType(data.devType);\n    setEditDevStack(data.devStack);\n    setEditTotalHeadCount(data.totalHeadCount);\n    setEditOnOff(data.onOff);\n    setEditContent(data.content);\n  };\n\n  // 취소 모달\n  const openModalHandler1 = () => {\n    setIsOpenOk(!isOpenOk);\n  };\n\n  // 완료 모달\n  const openModalHandler2 = () => {\n    setIsOpenCancel(!isOpenCancel);\n  };\n\n  return (\n    <>\n      <Container>\n        <WriteInputContainer>\n          <label htmlFor=\"title\">제목</label>\n          <div>\n            <input\n              name=\"editTitle\"\n              value={editTitle}\n              onChange={(e) => setEditTitle(e.target.value)}\n              placeholder=\"제목을 입력해주세요.\"\n              ref={titleInput}\n            />\n          </div>\n        </WriteInputContainer>\n        <DivContainer>\n          <WriteInputContainer width=\"95%\">\n            <label htmlFor=\"title\">시작일자</label>\n            <DatePick\n              startDate={editStartDate}\n              setStartDate={setEditStartDate}\n            />\n          </WriteInputContainer>\n          <WriteInputContainer>\n            <label htmlFor=\"title\">모집구분</label>\n            <div>\n              <SelectBox\n                defaultValue={editDevType}\n                options={devTypeOptions}\n                devTypeOptions={devTypeOptions}\n                setDevType={setEditDevType}\n                setDevStack={setEditDevStack}\n              ></SelectBox>\n            </div>\n          </WriteInputContainer>\n        </DivContainer>\n        <DivContainer>\n          <WriteInputContainer width=\"95%\">\n            <label htmlFor=\"title\">모집인원</label>\n            <div>\n              <input\n                type=\"number\"\n                name=\"editTotalHeadCount\"\n                value={editTotalHeadCount}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  setEditTotalHeadCount(Number(e.target.value))\n                }\n                placeholder=\"ex) 10\"\n              />\n              <span>명</span>\n            </div>\n          </WriteInputContainer>\n\n          <WriteInputContainer>\n            <label htmlFor=\"title\">진행방식</label>\n            <div>\n              <SelectBox\n                defaultValue={editOnOff}\n                options={onOffOptions}\n                setOnOff={setEditOnOff}\n              ></SelectBox>\n            </div>\n          </WriteInputContainer>\n        </DivContainer>\n\n        <CheckBox\n          setDevStack={setEditDevStack}\n          devType={editDevType}\n          devStack={editDevStack}\n        />\n        <WriteInputContainer height=\"300px\">\n          <label htmlFor=\"content\">모집 상세</label>\n          <div>\n            <textarea\n              name=\"editContent\"\n              value={editContent}\n              onChange={(e) => setEditContent(e.target.value)}\n              id=\"content\"\n              placeholder=\"모집 상세 내용을 입력해주세요.\"\n            />\n          </div>\n        </WriteInputContainer>\n      </Container>\n      <ButtonContainer>\n        <ButtonSecondary onClick={openModalHandler2}>취소</ButtonSecondary>\n        <ButtonSecondary onClick={openModalHandler1}>완료</ButtonSecondary>\n        {isOpenCancel && (\n          <Modal\n            isOpen={isOpenCancel}\n            handleModal={handleInit}\n            setIsOpen={setIsOpenCancel}\n          >\n            수정을 취소하시겠습니까?\n          </Modal>\n        )}\n\n        {isOpenOk && (\n          <Modal\n            isOpen={isOpenOk}\n            handleModal={handleEdit}\n            setIsOpen={setIsOpenOk}\n          >\n            정말로 글을 수정하시겠습니까?\n          </Modal>\n        )}\n      </ButtonContainer>\n    </>\n  );\n};\n\nexport default EditStudy;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 1050px;\n  box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.05);\n  border-radius: 30px;\n  margin-bottom: 2rem;\n  padding: 49px 55px 0px 55px;\n`;\n\nconst DivContainer = styled.div`\n  display: flex;\n  margin-top: 1rem;\n  justify-content: space-between;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n`;\n","import { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { WriteInputContainer } from '../Post/UI/PostInput';\nimport { ButtonSecondary } from '../UI/Button/Button';\nimport Modal from '../UI/Modal/Modal';\n\ntype dataType = {\n  board: string;\n  content: string;\n  dateCreated: string;\n  id: string;\n  nickName: string;\n  title: string;\n};\n\ninterface Props {\n  data: dataType;\n  onUpdatePost: (editData: object) => void;\n  toggleIsEdit: () => void;\n}\n\nconst EditCommunity = ({ data, onUpdatePost, toggleIsEdit }: Props) => {\n  const titleInput = useRef<HTMLInputElement>(null);\n\n  const [editTitle, setEditTitle] = useState(data.title);\n  const [editContent, setEditContent] = useState(data.content);\n  const dateUpdated = new Date().toLocaleDateString();\n\n  const [isOpenOk, setIsOpenOk] = useState(false);\n  const [isOpenCancel, setIsOpenCancel] = useState(false);\n\n  const editData = {\n    title: editTitle,\n    content: editContent,\n    dateUpdated,\n  };\n\n  useEffect(() => {\n    const { current } = titleInput;\n    current?.focus();\n  }, []);\n\n  // 수정 완료 버튼\n  const handleEdit = () => {\n    onUpdatePost(editData);\n  };\n\n  // 수정 취소\n  const handleInit = () => {\n    toggleIsEdit();\n    setEditTitle(data.title);\n    setEditContent(data.content);\n  };\n\n  // 취소 모달\n  const openModalHandler1 = () => {\n    setIsOpenOk(!isOpenOk);\n  };\n\n  // 완료 모달\n  const openModalHandler2 = () => {\n    setIsOpenCancel(!isOpenCancel);\n  };\n\n  return (\n    <>\n      <Container>\n        <WriteInputContainer>\n          <label htmlFor=\"title\">제목</label>\n          <div>\n            <input\n              name=\"editTitle\"\n              value={editTitle}\n              onChange={(e) => setEditTitle(e.target.value)}\n              placeholder=\"제목을 입력해주세요.\"\n              ref={titleInput}\n            />\n          </div>\n          <hr />\n        </WriteInputContainer>\n\n        <WriteInputContainer height=\"350px\">\n          <label htmlFor=\"content\">내용</label>\n          <div>\n            <textarea\n              name=\"editContent\"\n              value={editContent}\n              onChange={(e) => setEditContent(e.target.value)}\n              id=\"content\"\n              placeholder=\"내용을 입력해주세요.\"\n            />\n          </div>\n        </WriteInputContainer>\n      </Container>\n      <ButtonContainer>\n        <ButtonSecondary onClick={openModalHandler2}>취소</ButtonSecondary>\n        <ButtonSecondary onClick={openModalHandler1}>완료</ButtonSecondary>\n        {isOpenCancel && (\n          <Modal\n            isOpen={isOpenCancel}\n            handleModal={handleInit}\n            setIsOpen={setIsOpenCancel}\n          >\n            수정을 취소하시겠습니까?\n          </Modal>\n        )}\n\n        {isOpenOk && (\n          <Modal\n            isOpen={isOpenOk}\n            handleModal={handleEdit}\n            setIsOpen={setIsOpenOk}\n          >\n            정말로 글을 수정하시겠습니까?\n          </Modal>\n        )}\n      </ButtonContainer>\n    </>\n  );\n};\n\nexport default EditCommunity;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 620px;\n  box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.05);\n  border-radius: 30px;\n  margin-bottom: 2rem;\n  padding: 49px 55px 0px 55px;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport DetailStudy from '../components/Detail/DetailStudy';\nimport { ButtonSecondary } from '../components/UI/Button/Button';\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport DetailCommunity from '../components/Detail/DetailCommunity';\nimport {\n  deleteDoc,\n  query,\n  collection,\n  where,\n  getDocs,\n  updateDoc,\n} from 'firebase/firestore';\nimport { db } from '../firebase-config';\nimport { useParams } from 'react-router-dom';\nimport Modal from '../components/UI/Modal/Modal';\nimport EditStudy from '../components/Edit/EditStudy';\nimport EditCommunity from '../components/Edit/EditCommunity';\nimport { RootState } from '../redux/store';\n\ninterface Props {\n  isEdit: boolean;\n  toggleIsEdit: () => void;\n}\n\ntype idParams = {\n  id: string;\n};\n\nfunction Detail({ isEdit, toggleIsEdit }: Props) {\n  const nickName = useSelector(\n    (state: RootState) => state.loginReducer.nickName,\n  );\n\n  const { id } = useParams<idParams>();\n  const navigate = useNavigate();\n  const pathName = useLocation().pathname.split('/')[1];\n\n  const [data, setData] = useState(Object);\n  const [isOpenOk, setIsOpenOk] = useState(false);\n  const [isShow, setIsShow] = useState(false);\n\n  const getPosts = async () => {\n    const q = query(collection(db, 'posts'), where('id', '==', id));\n\n    const querySnapshot = await getDocs(q);\n    querySnapshot.forEach((doc) => {\n      setData(doc.data());\n    });\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  // 글쓴이만 수정, 삭제 버튼보이도록\n  useEffect(() => {\n    if (nickName === data.nickName) {\n      setIsShow(true);\n    } else {\n      setIsShow(false);\n    }\n  }, [data.nickName, nickName]);\n\n  const openModalHandler1 = () => {\n    setIsOpenOk(!isOpenOk);\n  };\n\n  // 글 삭제\n  const onDeletePost = async () => {\n    const q = query(collection(db, 'posts'), where('id', '==', id));\n    const data = await getDocs(q);\n    try {\n      if (data.docs.length !== 0) {\n        await deleteDoc(data.docs[0].ref);\n      }\n      pathName === 'community' ? navigate('/community') : navigate('/');\n\n      window.location.reload();\n    } catch {\n      // console.log(\"Not delete\");\n    }\n  };\n\n  // 글 수정\n  const onUpdatePost = async (el: object) => {\n    const q = query(collection(db, 'posts'), where('id', '==', id));\n    const data = await getDocs(q);\n    try {\n      if (data.docs.length !== 0) {\n        await updateDoc(data.docs[0].ref, el);\n      }\n      if (toggleIsEdit) toggleIsEdit();\n      window.location.reload();\n    } catch {\n      // console.log('Not Update');\n    }\n  };\n  return (\n    <Container>\n      {isEdit ? (\n        <>\n          {pathName === 'community' ? (\n            <EditCommunity\n              data={data}\n              onUpdatePost={onUpdatePost}\n              toggleIsEdit={toggleIsEdit}\n            />\n          ) : (\n            <EditStudy\n              data={data}\n              onUpdatePost={onUpdatePost}\n              toggleIsEdit={toggleIsEdit}\n            />\n          )}\n        </>\n      ) : (\n        <>\n          {pathName === 'community' ? (\n            <DetailCommunity data={data} />\n          ) : (\n            <DetailStudy data={data} />\n          )}\n        </>\n      )}\n      {!isEdit && (\n        <ButtonContainer>\n          <ButtonSecondary\n            width=\"126px\"\n            onClick={() => {\n              pathName === 'community'\n                ? navigate('/community')\n                : navigate('/studyjoin');\n            }}\n          >\n            목록으로\n          </ButtonSecondary>\n\n          {isShow && (\n            <>\n              <ButtonRightBox>\n                <ButtonSecondary onClick={toggleIsEdit}>수정</ButtonSecondary>\n                <ButtonSecondary onClick={openModalHandler1}>\n                  삭제\n                </ButtonSecondary>\n\n                {isOpenOk && (\n                  <Modal\n                    isOpen={isOpenOk}\n                    handleModal={onDeletePost}\n                    setIsOpen={setIsOpenOk}\n                  >\n                    정말로 글을 삭제하시겠습니까?\n                  </Modal>\n                )}\n              </ButtonRightBox>\n            </>\n          )}\n        </ButtonContainer>\n      )}\n    </Container>\n  );\n}\n\nexport default Detail;\n\nconst Container = styled.div`\n  max-width: 900px;\n  min-height: 100vh;\n  width: 100%;\n  margin: 0 auto;\n  padding: 40px 0;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst ButtonRightBox = styled.span`\n  display: flex;\n  justify-content: space-between;\n  width: 19%;\n  gap: 10px;\n`;\n"],"names":["children","isOpen","setIsOpen","openModalHandler","StyledModal","className","onClick","StyledModalCon","e","stopPropagation","type","src","ImgObject","alt","StyledModalFooter","styled","data","photoUrl","useSelector","state","loginReducer","useState","devStackWord","devType","skill","a","idx","frontStacks","el","backStacks","ViewContainer","undefined","board","Title","title","Info","ProfileImg","Writer","nickName","dateCreated","DevInfo","InnerBox","ListLine","List","Dot","haveHeadCount","totalHeadCount","startDate","onOff","DevInnerBox","DevList","DevStackList","devStack","map","style","background","item","stackBackgrounds","stack","color","process","Content","content","ButtonBox","Button","ModalSoon","Loading","Date","onUpdatePost","toggleIsEdit","titleInput","useRef","editTitle","setEditTitle","editStartDate","setEditStartDate","editDevType","setEditDevType","editDevStack","setEditDevStack","editTotalHeadCount","setEditTotalHeadCount","editOnOff","setEditOnOff","editContent","setEditContent","dateUpdated","toLocaleDateString","isOpenOk","setIsOpenOk","isOpenCancel","setIsOpenCancel","editData","useEffect","current","focus","Container","htmlFor","name","value","onChange","target","placeholder","ref","DivContainer","width","DatePick","setStartDate","SelectBox","defaultValue","options","devTypeOptions","setDevType","setDevStack","Number","onOffOptions","setOnOff","CheckBox","height","id","ButtonContainer","Modal","handleModal","isEdit","useParams","navigate","useNavigate","pathName","useLocation","pathname","split","Object","setData","isShow","setIsShow","getPosts","q","query","collection","db","where","getDocs","forEach","doc","onDeletePost","docs","length","deleteDoc","window","location","reload","updateDoc","ButtonRightBox"],"sourceRoot":""}