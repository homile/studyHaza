{"version":3,"file":"static/js/152.a271b579.chunk.js","mappings":"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","sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","components/Post/PostCommunity.tsx","components/Post/PostStudy.tsx","components/Post/PostBox.tsx","components/UI/StudyCard.tsx","components/UI/Button/SwitchButton.tsx","components/UI/StudyContents.tsx","pages/StudyJoin.tsx"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { useState, useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { db } from '../../firebase-config';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { WriteInputContainer } from './UI/PostInput';\nimport { ButtonPrimary } from '../UI/Button/Button';\nimport Modal from '../UI/Modal/Modal';\nimport { v4 as uuidv4 } from 'uuid';\nimport { RootState } from '../../redux/store';\n\ninterface Props {\n  setIsWrite: (isWrite: boolean) => void;\n}\n\nfunction PostCommunity({ setIsWrite }: Props) {\n  const navigate = useNavigate();\n\n  const titleInput = useRef<HTMLInputElement>(null);\n\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const dateCreated = new Date();\n  const nickName = useSelector(\n    (state: RootState) => state.loginReducer.nickName,\n  );\n\n  const [isOpenOk, setIsOpenOk] = useState(false);\n  const [isOpenCancel, setIsOpenCancel] = useState(false);\n\n  useEffect(() => {\n    const { current } = titleInput;\n    current?.focus();\n  }, []);\n\n  // 완료 버튼 클릭시\n  const openModalHandler1 = () => {\n    setIsOpenOk(!isOpenOk);\n  };\n\n  // 취소 버튼 클릭시\n  const openModalHandler2 = () => {\n    setIsOpenCancel(!isOpenCancel);\n  };\n\n  // 글 내용 초기화\n  const handleInit = () => {\n    setTitle('');\n    setContent('');\n    setIsWrite(false);\n  };\n\n  const postsCollectionRef = collection(db, 'posts');\n\n  // firestore에 데이터 올리기\n  const createPosts = async () => {\n    const id = uuidv4();\n    await addDoc(postsCollectionRef, {\n      board: 'community',\n      content,\n      dateCreated: dateCreated.toLocaleDateString(),\n      id,\n      nickName,\n      title,\n    });\n    navigate(`/community/detail/${id}`);\n  };\n\n  return (\n    <>\n      <WriteInputContainer>\n        <label htmlFor=\"title\">제목</label>\n        <div>\n          <input\n            defaultValue={title}\n            onChange={(e) => setTitle(e.target.value)}\n            id=\"community_title\"\n            placeholder=\"제목을 입력해주세요.\"\n            ref={titleInput}\n          />\n        </div>\n        <hr />\n      </WriteInputContainer>\n\n      <WriteInputContainer height=\"350px\">\n        <label htmlFor=\"content\">내용</label>\n        <div>\n          <textarea\n            defaultValue={content}\n            onChange={(e) => {\n              setContent(e.target.value);\n            }}\n            id=\"community_content\"\n            placeholder=\"내용을 입력해주세요.\"\n          />\n        </div>\n      </WriteInputContainer>\n      <ButtonContainer>\n        <ButtonPrimary onClick={openModalHandler2} background=\"#B6B6B6\">\n          취소\n        </ButtonPrimary>\n        {isOpenCancel && (\n          <Modal\n            isOpen={isOpenCancel}\n            handleModal={handleInit}\n            setIsOpen={setIsOpenCancel}\n          >\n            등록을 취소하시겠습니까?\n          </Modal>\n        )}\n        <ButtonPrimary onClick={openModalHandler1}>작성완료</ButtonPrimary>\n        {isOpenOk && (\n          <Modal\n            isOpen={isOpenOk}\n            handleModal={createPosts}\n            setIsOpen={setIsOpenOk}\n          >\n            커뮤니티 글을 등록하시겠습니까?\n          </Modal>\n        )}\n      </ButtonContainer>\n    </>\n  );\n}\n\nexport default PostCommunity;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n","import { useState, useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { WriteInputContainer } from './UI/PostInput';\nimport { SelectBox } from './UI/SelectBox';\nimport { DatePick } from './UI/DatePick';\nimport CheckBox from './UI/CheckBox';\nimport { ButtonPrimary } from '../UI/Button/Button';\nimport Modal from '../UI/Modal/Modal';\nimport { db } from '../../firebase-config';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { v4 as uuidv4 } from 'uuid';\nimport { RootState } from '../../redux/store';\nimport { devTypeOptions, onOffOptions } from '../../StackData';\n\ninterface Props {\n  setIsWrite: (isWrite: boolean) => void;\n  isEdit?: boolean;\n}\n\nconst PostStudy = ({ setIsWrite, isEdit }: Props) => {\n  const navigate = useNavigate();\n\n  const titleInput = useRef<HTMLInputElement>(null);\n\n  const [title, setTitle] = useState('');\n  const [startDate, setStartDate] = useState<Date>(new Date());\n  const [devType, setDevType] = useState('frontend');\n  const [devStack, setDevStack] = useState<string[]>([]);\n  const [totalHeadCount, setTotalHeadCount] = useState<number>(0);\n  const [onOff, setOnOff] = useState('on');\n  const [content, setContent] = useState('');\n  const dateCreated = new Date();\n  const nickName = useSelector(\n    (state: RootState) => state.loginReducer.nickName,\n  );\n\n  const [isOpenOk, setIsOpenOk] = useState(false);\n  const [isOpenCancel, setIsOpenCancel] = useState(false);\n\n  useEffect(() => {\n    const { current } = titleInput;\n    current?.focus();\n  }, []);\n\n  const openModalHandler1 = () => {\n    setIsOpenOk(!isOpenOk);\n  };\n\n  const openModalHandler2 = () => {\n    setIsOpenCancel(!isOpenCancel);\n  };\n\n  const handleInit = () => {\n    setTitle('');\n    setStartDate(new Date());\n    setDevType('frontend');\n    setDevStack([]);\n    setTotalHeadCount(0);\n    setOnOff('on');\n    setContent('');\n    setIsWrite(false);\n  };\n\n  const postsCollectionRef = collection(db, 'posts');\n\n  // firestore에 데이터 업로드\n  const createPosts = async () => {\n    const id = uuidv4();\n    await addDoc(postsCollectionRef, {\n      board: 'study',\n      content,\n      dateCreated: dateCreated.toLocaleDateString(),\n      devStack,\n      devType,\n      haveHeadCount: 0,\n      id,\n      nickName,\n      onOff,\n      startDate: startDate.toLocaleDateString(),\n      title,\n      totalHeadCount,\n    });\n    navigate(`/studyjoin/detail/${id}`);\n  };\n\n  return (\n    <>\n      <WriteInputContainer>\n        <label htmlFor=\"title\">제목</label>\n        <div>\n          <input\n            defaultValue={title}\n            onChange={(e) => {\n              setTitle(e.target.value);\n            }}\n            id=\"title\"\n            placeholder=\"제목을 입력해주세요.\"\n            ref={titleInput}\n          />\n        </div>\n      </WriteInputContainer>\n      <DivContainer>\n        <WriteInputContainer width=\"95%\" padding=\"0 3.3rem\">\n          <label htmlFor=\"title\">시작일자</label>\n          <DatePick startDate={startDate} setStartDate={setStartDate} />\n        </WriteInputContainer>\n        <WriteInputContainer>\n          <label htmlFor=\"title\">모집구분</label>\n          <div>\n            <SelectBox\n              defaultValue={devType}\n              options={devTypeOptions}\n              devTypeOptions={devTypeOptions}\n              setDevType={setDevType}\n              setDevStack={setDevStack}\n            ></SelectBox>\n          </div>\n        </WriteInputContainer>\n      </DivContainer>\n      <DivContainer>\n        <WriteInputContainer width=\"95%\">\n          <label htmlFor=\"title\">모집인원</label>\n          <div>\n            <input\n              type=\"number\"\n              defaultValue={totalHeadCount}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setTotalHeadCount(parseInt(e.target.value));\n              }}\n              id=\"title\"\n              placeholder=\"ex) 10\"\n            />\n            <span>명</span>\n          </div>\n        </WriteInputContainer>\n\n        <WriteInputContainer>\n          <label htmlFor=\"title\">진행방식</label>\n          <div>\n            <SelectBox\n              defaultValue={onOff}\n              options={onOffOptions}\n              setOnOff={setOnOff}\n            ></SelectBox>\n          </div>\n        </WriteInputContainer>\n      </DivContainer>\n\n      <CheckBox\n        setDevStack={setDevStack}\n        devType={devType}\n        devStack={devStack}\n      />\n      <WriteInputContainer height=\"400px\">\n        <label htmlFor=\"content\">모집 상세</label>\n        <div>\n          <textarea\n            defaultValue={content}\n            onChange={(e) => {\n              setContent(e.target.value);\n            }}\n            id=\"content\"\n            placeholder=\"모집 상세 내용을 입력해주세요.\"\n          />\n        </div>\n      </WriteInputContainer>\n      {!isEdit && (\n        <ButtonContainer>\n          <ButtonPrimary onClick={openModalHandler2} background=\"#B6B6B6\">\n            취소\n          </ButtonPrimary>\n          <ButtonPrimary onClick={openModalHandler1}>작성완료</ButtonPrimary>\n        </ButtonContainer>\n      )}\n\n      {isOpenCancel && (\n        <Modal\n          isOpen={isOpenCancel}\n          handleModal={handleInit}\n          setIsOpen={setIsOpenCancel}\n        >\n          등록을 취소하시겠습니까?\n        </Modal>\n      )}\n\n      {isOpenOk && (\n        <Modal\n          isOpen={isOpenOk}\n          handleModal={createPosts}\n          setIsOpen={setIsOpenOk}\n        >\n          스터디 모집 글을 등록하시겠습니까?\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default PostStudy;\n\nconst DivContainer = styled.div`\n  display: flex;\n  margin-top: 1rem;\n  justify-content: space-between;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n","import styled from 'styled-components';\nimport { useLocation } from 'react-router-dom';\nimport PostCommunity from './PostCommunity';\nimport PostStudy from './PostStudy';\n\ninterface Props {\n  setIsWrite: (isWrite: boolean) => void;\n}\n\ninterface StyleProps {\n  community: boolean;\n}\n\n// 스터디 모집 글쓰기, 커뮤니티 글쓰기 컴포넌트 container\nconst WriteBox = ({ setIsWrite }: Props) => {\n  const { pathname } = useLocation();\n\n  return (\n    <WrapPanel>\n      <HeaderContainer>\n        {pathname === '/community' ? '커뮤니티 글쓰기' : '스터디 만들기'}\n      </HeaderContainer>\n\n      <WriteContainer community={pathname === '/community' ? true : false}>\n        {pathname === '/community' ? (\n          <PostCommunity setIsWrite={setIsWrite} />\n        ) : (\n          <PostStudy setIsWrite={setIsWrite} />\n        )}\n      </WriteContainer>\n    </WrapPanel>\n  );\n};\n\nexport default WriteBox;\n\nconst WrapPanel = styled.div`\n  width: 1000px;\n  margin: 0 auto;\n  background-color: #fff;\n`;\n\nconst WriteContainer = styled.div<StyleProps>`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: ${(props) => (props.community ? '700px' : '1230px')};\n  border: 1px solid #e3e3e3;\n  border-radius: 0 0 30px 30px;\n  margin-bottom: 6rem;\n  padding: 49px 55px 0px 55px;\n`;\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  align-items: flex-end;\n  width: 100%;\n  height: 134px;\n  background-color: #2584f4;\n  border-radius: 30px 30px 0 0;\n  color: white;\n  font-family: 'Pretendard-Bold';\n  font-size: 35px;\n  padding-left: 55px;\n  padding-bottom: 29px;\n`;\n","import styled from 'styled-components';\nimport { ProfileImgXS } from './Img/ProfileImg';\nimport img from '../../images/pf_sample.png';\nimport { Link } from 'react-router-dom';\nimport { frontStacks, backStacks } from '../../StackData';\n\nexport type communityDataType = {\n  startDate: string;\n  dateCreated: string;\n  id: string;\n  nickName: string;\n  title: string;\n  haveHeadCount: string;\n  totalHeadCount: string;\n  devStack: [];\n  devType: string;\n  onOff: string;\n};\n\ninterface Props {\n  data: communityDataType;\n  idx: number;\n}\n\nexport const StudyCard = ({ data }: Props) => {\n  const startDay = new Date(data.startDate);\n  const toDay = new Date();\n  const diff = +startDay - +toDay;\n  const diffDay = Math.floor(diff / (1000 * 60 * 60 * 24));\n\n  // 모집마감일 디데이\n  function diffDayData() {\n    if (diffDay <= 0) {\n      return '종료';\n    }\n    return `D-${diffDay}`;\n  }\n\n  const devStackWord = (devType: string, skill: string) => {\n    let a = '';\n    let idx = 0;\n    if (devType === 'frontend') {\n      idx = frontStacks.findIndex((el) => el === skill);\n      a = 'fe';\n    }\n\n    if (devType === 'backend') {\n      idx = backStacks.findIndex((el) => el === skill);\n      a = 'be';\n    }\n\n    if (idx >= 9) {\n      return `sk_${a}${idx + 1}`;\n    } else {\n      return `sk_${a}${idx + 1}`;\n    }\n  };\n\n  return (\n    <>\n      <StyledLink to={`/studyjoin/detail/${data.id}`}>\n        <ItemCard>\n          <ProjectInfo>\n            <div className=\"date-area\">\n              <span className=\"date-area__date\">\n                <em>{diffDayData()}</em> {data.startDate}\n              </span>\n              <ThumbnailGroup>\n                <li>\n                  <ProfileImgXS src={img} />\n                </li>\n                <li>\n                  <ProfileImgXS src={img} />\n                </li>\n                <li>+2</li>\n              </ThumbnailGroup>\n            </div>\n            <h4>{data.title}</h4>\n            <ul className=\"skill-area\">\n              {data.devStack.map((el, idx) => {\n                return (\n                  <li key={idx}>\n                    <img\n                      src={\n                        process.env.PUBLIC_URL +\n                        `/skill/${devStackWord(data.devType, `${el}`)}.png`\n                      }\n                      alt=\"\"\n                    />\n                  </li>\n                );\n              })}\n            </ul>\n            <ul className=\"meta-area\">\n              <li>#{data.onOff === 'on' ? '온라인' : '오프라인'}</li>\n              <li>#3개월</li>\n            </ul>\n          </ProjectInfo>\n          <StudyInfo>\n            <p>\n              {data.nickName}\n              <em>\n                {diffDay <= 0 || data.haveHeadCount === data.totalHeadCount\n                  ? '모집 종료'\n                  : '모집 중'}{' '}\n                {data.haveHeadCount}/{data.totalHeadCount}명\n              </em>\n            </p>\n          </StudyInfo>\n        </ItemCard>\n      </StyledLink>\n    </>\n  );\n};\n\nconst ItemCard = styled.div`\n  display: block;\n  background: #fff;\n  border-radius: 25px;\n  border: 1px solid #ededed;\n  padding: 25px 25px;\n  cursor: pointer;\n\n  &:hover {\n    border-color: #e1e1e1;\n    box-shadow: 0 8px 10px 10px rgba(0, 0, 0, 0.03);\n  }\n`;\n\nconst ProjectInfo = styled.div`\n  position: relative;\n  display: block;\n  padding-bottom: 35px;\n  min-height: 225px;\n  .date-area {\n    display: flex;\n    justify-content: space-between;\n    font-size: 16px;\n    font-family: 'Pretendard-medium';\n\n    .date-area__date {\n      em {\n        display: inline-block;\n        padding: 5px 9px;\n        background: #000;\n        border-radius: 50px;\n        font-weight: bold;\n        color: #fff;\n      }\n    }\n  }\n  h4 {\n    padding: 12px 0 0;\n    font-size: 21px;\n    font-family: 'Pretendard-Medium';\n    line-height: 1.2em;\n    letter-spacing: -0.025em;\n    min-height: 77px;\n  }\n  .skill-area,\n  .meta-area {\n    display: flex;\n    gap: 5px;\n    flex-wrap: wrap;\n  }\n  .skill-area {\n    li {\n      width: 35px;\n      height: 35px;\n\n      img {\n        width: 100%;\n      }\n    }\n  }\n  .meta-area {\n    position: absolute;\n    bottom: 13px;\n    gap: 8px;\n    li {\n      font-family: 'Pretendard-Medium';\n      font-size: 15px;\n      color: #75787e;\n    }\n  }\n`;\n\nconst StudyInfo = styled.div`\n  display: block;\n  border-top: 1px solid #ededed;\n  padding: 15px 0 0;\n  font-size: 17px;\n  font-weight: bold;\n  line-height: 1.3em;\n  em {\n    display: block;\n    font-size: 15px;\n    font-family: 'Pretendard-medium';\n    font-weight: normal;\n  }\n`;\n\nconst ThumbnailGroup = styled.ul`\n  display: flex;\n  li {\n    margin-left: -8px;\n    font-size: 12px;\n    &:last-child {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: #fff;\n      border: 1px solid #696969;\n      border-radius: 50px;\n      width: 27px;\n      height: 27px;\n    }\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n`;\n","import styled from \"styled-components\";\n\n\ninterface Props {\n    isOn?: boolean,\n    toggleHandler?: () => void,\n}\n\nexport const SwitchButton = ({isOn, toggleHandler}: Props) => {\n    return(\n        <>\n            <ToggleContainer onClick={toggleHandler}>\n                <div className={`toggle-container ${isOn ? 'toggle--checked' : ''}`}>\n                    <div className={`toggle-circle ${isOn ? 'toggle--checked' : ''}`}/>\n                </div>\n            </ToggleContainer>\n        </>\n    )\n}\n\n\nconst ToggleContainer = styled.div`\n    cursor: pointer;\n    .toggle-container{\n        display: flex;\n        align-items:center;\n        position:relative;\n        width:50px;\n        height:28px;\n        background:#CBCBCB;\n        border-radius: 50px;\n        &.toggle--checked{background:#2584F4}\n\n        .toggle-circle{\n            display: inline-block;\n            width:22px;\n            height:22px;\n            border-radius: 50px;\n            background:#fff;\n            margin-left:3px;\n            transition:  all .3s;\n            &.toggle--checked{margin-left:25px}\n        }\n    }\n    \n`","import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { communityDataType, StudyCard } from './StudyCard';\nimport { SwitchButton } from './Button/SwitchButton';\nimport Loading from '../Layout/Loading';\n\ninterface Props {\n  posts: communityDataType[];\n}\n\nexport const StudyContents = ({ posts }: Props) => {\n  const [currentTab, setCurrentTab] = useState(0);\n  const [isOn, setIsOn] = useState(false);\n  const [postData, setPostData] = useState<communityDataType[]>([]);\n\n  const filtered = {\n    menuTab: ['전체', '프론트엔드', '백엔드'],\n    skillTab: ['전체', 'frontend', 'backend'],\n  };\n\n  useEffect(() => {\n    setPostData(posts);\n  }, [posts]);\n\n  useEffect(() => {\n    if (isOn) {\n      const filterdData = posts.filter((data: communityDataType) => {\n        return new Date(data.startDate) > new Date();\n      });\n      setPostData(filterdData);\n      for (let i = 1; i < filtered.skillTab.length; i++) {\n        if (currentTab === i) {\n          setPostData(\n            filterdData.filter((data: communityDataType) => {\n              return data.devType === filtered.skillTab[i];\n            }),\n          );\n        }\n      }\n    } else {\n      setPostData(posts);\n      for (let i = 1; i < filtered.skillTab.length; i++) {\n        if (currentTab === i) {\n          setPostData(\n            posts.filter((data: communityDataType) => {\n              return data.devType === filtered.skillTab[i];\n            }),\n          );\n        }\n      }\n    }\n  }, [isOn, currentTab]);\n\n  const toggleHandler = () => {\n    setIsOn(!isOn);\n  };\n\n  const activeMenuHandler = (idx: number) => {\n    setCurrentTab(idx);\n  };\n\n  return (\n    <div>\n      <ConSortArea>\n        <TabMenu>\n          {filtered.menuTab.map((el, idx) => {\n            return (\n              <li\n                key={idx}\n                className={`${idx === currentTab ? 'active' : null}`}\n                onClick={() => activeMenuHandler(idx)}\n              >\n                {el}\n              </li>\n            );\n          })}\n        </TabMenu>\n        <SwitchGroup>\n          <em>모집중만 보기</em>\n          <SwitchButton isOn={isOn} toggleHandler={toggleHandler} />\n        </SwitchGroup>\n      </ConSortArea>\n      <StudyList>\n        {postData[0] !== undefined ? (\n          <StudyCardList>\n            {postData.map((data, idx) => (\n              <StudyCard key={idx} data={data} idx={idx} />\n            ))}\n          </StudyCardList>\n        ) : (\n          <Loading />\n        )}\n      </StudyList>\n    </div>\n  );\n};\n\nconst TabMenu = styled.ul`\n  display: flex;\n  gap: 13px;\n  li {\n    font-size: 1.25rem;\n    font-family: 'Pretendard-Medium';\n    background: #f0f0f0;\n    padding: 15px 20px;\n    border-radius: 12px;\n    cursor: pointer;\n    &.active {\n      background-color: #2584f4;\n      color: #fff;\n    }\n    &:before {\n      font-family: 'FontAwesome';\n      margin-right: 5px;\n    }\n    &:nth-child(2):before {\n      content: '\\f1b2';\n    }\n    &:nth-child(3):before {\n      content: '\\f233';\n    }\n  }\n`;\n\nconst StudyList = styled.div`\n  display: block;\n`;\n\nconst StudyCardList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  row-gap: 30px;\n  column-gap: 30px;\n  margin-top: 25px;\n`;\n\nconst SwitchGroup = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 20px;\n  font-family: 'Pretendard-Medium';\n  gap: 5px;\n`;\n\nconst ConSortArea = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import React, { useState } from 'react';\nimport WriteBox from '../components/Post/PostBox';\nimport { StudyContents } from '../components/UI/StudyContents';\nimport iconButton from '../images/icon_add.png';\nimport styled from 'styled-components';\nimport { communityDataType } from '../components/UI/StudyCard'\nimport Loading from '../components/Layout/Loading';\n\ninterface Props {\n  posts: communityDataType[];\n}\n\nfunction StudyJoin({ posts }: Props) {\n  const [isWrite, setIsWrite] = useState(false);\n\n  const onWriteClick = () => {\n    setIsWrite(true);\n  };\n\n  return (\n    <Container>\n      {isWrite ? (\n        <WriteBox setIsWrite={setIsWrite} />\n      ) : (\n        <>\n          <CreateStudyButton onClick={onWriteClick}>\n            <div>\n              <img src={iconButton} className=\"icon-add\" alt=\"\" />\n              <p>나만의 스터디를 만들어보세요!</p>\n            </div>\n          </CreateStudyButton>\n          <ConPanel>\n            {Number(posts) !== 0 ? (\n              <StudyContents posts={posts} />\n            ) : (\n              <Loading />\n            )}\n          </ConPanel>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default StudyJoin;\n\nconst Container = styled.div`\n  max-width: 1290px;\n  width: 100%;\n  margin: 0 auto;\n  padding: 40px 0;\n`;\n\nconst ConPanel = styled.div`\n  width: 100%;\n  min-height: 90vh;\n  padding: 50px 0 25px;\n`;\n\nconst CreateStudyButton = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 185px;\n  background: #f9f9f9;\n  border: 1px solid #e3e3e3;\n  border-radius: 25px;\n  text-align: center;\n  cursor: pointer;\n\n  .icon-add {\n    width: 63px;\n  }\n\n  p {\n    padding: 6px 0;\n    font-size: 20px;\n    font-family: 'Pretendard-Medium';\n  }\n\n  &:hover {\n    background: #f4f4f4;\n    border-color: #dbdbdb;\n    .icon-add {\n      opacity: 0.85;\n    }\n    p {\n      color: #1879eb;\n    }\n  }\n`;\n"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","REGEX","byteToHex","i","push","toString","substr","arr","offset","arguments","length","undefined","toLowerCase","validate","TypeError","options","buf","rnds","random","stringify","setIsWrite","navigate","useNavigate","titleInput","useRef","useState","title","setTitle","content","setContent","dateCreated","Date","nickName","useSelector","state","loginReducer","isOpenOk","setIsOpenOk","isOpenCancel","setIsOpenCancel","useEffect","current","focus","postsCollectionRef","collection","db","createPosts","id","uuidv4","addDoc","board","toLocaleDateString","htmlFor","defaultValue","onChange","e","target","value","placeholder","ref","height","ButtonContainer","Button","onClick","background","Modal","isOpen","handleModal","setIsOpen","styled","isEdit","startDate","setStartDate","devType","setDevType","devStack","setDevStack","totalHeadCount","setTotalHeadCount","onOff","setOnOff","haveHeadCount","DivContainer","width","padding","DatePick","SelectBox","devTypeOptions","type","parseInt","onOffOptions","CheckBox","pathname","useLocation","WrapPanel","HeaderContainer","WriteContainer","community","props","StudyCard","data","diff","diffDay","Math","floor","devStackWord","skill","a","idx","frontStacks","el","backStacks","StyledLink","to","ItemCard","ProjectInfo","className","ThumbnailGroup","ProfileImg","src","img","map","process","alt","StudyInfo","Link","SwitchButton","isOn","toggleHandler","ToggleContainer","StudyContents","posts","currentTab","setCurrentTab","setIsOn","postData","setPostData","filtered","menuTab","skillTab","filterdData","filter","ConSortArea","TabMenu","activeMenuHandler","SwitchGroup","StudyList","StudyCardList","Loading","isWrite","Container","CreateStudyButton","ConPanel","Number"],"sourceRoot":""}